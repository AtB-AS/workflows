on:
  workflow_call:
    secrets:
      build_secrets:
        required: false
    inputs:
      build_args:
        type: string
        description: "Builds args passed to docker build"
        required: false
      image:
        type: string
        description: "Full path to the image (gcr.io/my/image)"
        required: true
      workload_identity_provider:
        type: string
        description: "Workload identity federation provider"
        required: false
        default: "projects/827196677776/locations/global/workloadIdentityPools/ci-builds/providers/github"
      workload_identity_service_account_email:
        type: string
        description: "IAM service account to generate credentials for"
        required: false
        default: "sa-gh-gcr-writer@atb-mobility-platform.iam.gserviceaccount.com"

jobs:
  build:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3
      - id: buildx
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.image }}
          tags: |
            type=semver,pattern={{raw}}
            type=sha,prefix=,enable=true,format=short
            type=raw,value=latest,enable={{is_default_branch}}
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          token_format: access_token
          workload_identity_provider: ${{ inputs.workload_identity_provider }}
          service_account: ${{ inputs.workload_identity_service_account_email }}
      - id: gcr
        name: Configure docker for GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - id: buildpush
        name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: Dockerfile
          build-args: ${{ inputs.build_args }}
          secrets: ${{ secrets.build_secrets }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha,scope=${{ inputs.image }}
          cache-to: type=gha,mode=max,scope=${{ inputs.image }}
